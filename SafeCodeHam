//--------------------
int gameState = 1;
int stateTime = 0;

float getPosWhite() {
  float pos = 0;
  float count = 0;

  if (IR_L3 == 1) {
    pos += -5;
    count++;
  }
  if (IR_L2 == 1) {
    pos += -3;
    count++;
  }
  if (IR_L1 == 1) {
    pos += -1;
    count++;
  }
  if (IR_R1 == 1) {
    pos += 1;
    count++;
  }
  if (IR_R2 == 1) {
    pos += 3;
    count++;
  }
  if (IR_R3 == 1) {
    pos += 5;
    count++;
  }

  if (count > 0) {
    pos = pos / count;
  }
  return pos;
}

void linefollowWhite(float speed, float gain) {
  float pos = getPosWhite();
  if (pos > 0) {
    WheelLeft = speed;
    WheelRight = speed - (gain * speed * pos / 5.0);
  } else {
    WheelLeft = speed + (gain * speed * pos / 5.0);
    WheelRight = speed;
  }
}

float getPosBlack() {
  float pos = 0;
  float count = 0;

  if (IR_L3 == 0) {
    pos += -5;
    count++;
  }
  if (IR_L2 == 0) {
    pos += -3;
    count++;
  }
  if (IR_L1 == 0) {
    pos += -1;
    count++;
  }
  if (IR_R1 == 0) {
    pos += 1;
    count++;
  }
  if (IR_R2 == 0) {
    pos += 3;
    count++;
  }
  if (IR_R3 == 0) {
    pos += 5;
    count++;
  }

  if (count > 0) {
    pos = pos / count;
  }
  return pos;
}

void linefollowBlack(float speed, float gain) {
  float pos = getPosBlack();
  if (pos > 0) {
    WheelLeft = speed;
    WheelRight = speed - (gain * speed * pos / 5.0);
  } else {
    WheelLeft = speed + (gain * speed * pos / 5.0);
    WheelRight = speed;
  }
}

void stop() {
  WheelLeft = 0;
  WheelRight = 0;
}

void moveForward(int SpeedOfWheel) {
  WheelLeft = SpeedOfWheel;
  WheelRight = SpeedOfWheel;
}

void moveBackWards(int SpeedOfWheelBack) {
  WheelLeft = -SpeedOfWheelBack;
  WheelRight = -SpeedOfWheelBack;
}

int isColor(int r, int g, int b) {
  if (CS_R > r - 10 && CS_R < r + 10 && CS_G > g - 10 && CS_G < g + 10 &&
      CS_B > b - 10 && CS_B < b + 10) {
    return true;
  } else {
    return false;
  }
}

int is_north() {
  if (RotationZ > 177 && RotationZ < 183) {
    return true;
  } else {
    return false;
  }
}

int is_east() {
  if (RotationZ > 87 && RotationZ < 93) {
    return true;
  } else {
    return false;
  }
}

int is_west() {
  if (RotationZ > 267 && RotationZ < 273) {
    return true;
  } else {
    return false;
  }
}

int is_south() {
  if (RotationZ > -3 && RotationZ < 3) {
    return true;
  } else {
    return false;
  }
}

void nextState() {
  gameState += 1;
  stateTime = 0;
}

int is_duration(float duration) {
  if (stateTime >= (duration * 40)) {
    return true;
  }
  return false;
}

void moveSteering(int speed, int steering) {
  if (steering > 100) {
    steering = 100;
  } else if (steering < -100) {
    steering = -100;
  }

  if (steering > 0) {
    WheelLeft = speed;
    WheelRight = speed - (2 * speed * steering / 100);
  } else {
    WheelRight = speed;
    WheelLeft = speed - (2 * speed * -steering / 100);
  }
}

void turnToAngle(int angle, int steering1) {
  if (angle > 180) {
    if (RotationZ < (angle - 180)) {
      RotationZ += 360;
    } else {
      if (RotationZ > (angle + 180)) {
        RotationZ -= 360;
      }
    }
  }

  float error = RotationZ - angle;
  float speed2 = error * 0.3;
  moveSteering(speed2, steering1);
}

int isPurple() { return isColor(246, 7, 245); }

void isAllWhite() {
  if (IR_R2 == 1 && IR_R3 == 1 && IR_R1 == 1 && IR_L3 == 1 && IR_L2 == 1 &&
      IR_L1 == 1) {
    return true;
  } else {
    return false;
  }
}

void isAllBlack() {
  if (IR_R2 == 0 && IR_R3 == 0 && IR_R1 == 0 && IR_L3 == 0 && IR_L2 == 0 &&
      IR_L1 == 0) {
    return true;
  } else {
    return false;
  }
}

int is_orange() { return isColor(201, 123, 7); }

int isRed() { return isColor(255, 7, 7); }

//------------------------
